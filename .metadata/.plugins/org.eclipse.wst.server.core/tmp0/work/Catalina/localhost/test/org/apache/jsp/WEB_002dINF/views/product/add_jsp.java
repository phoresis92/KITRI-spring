/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-02-01 04:41:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1548377033159L));
    _jspx_dependants.put("jar:file:/C:/Users/hushe/Desktop/SPRING/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springWeb2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$.ajax({\r\n");
      out.write("\ttype: 'get',\r\n");
      out.write("\turl: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cate/cate1',\r\n");
      out.write("\tsuccess: function(data){\r\n");
      out.write("\t\t//console.log(data);\r\n");
      out.write("\t\t$('#medium').empty();\r\n");
      out.write("\t\t$('#small').empty();\r\n");
      out.write("\t\tvar list = JSON.parse(data);\r\n");
      out.write("\t\t//console.log(list);\r\n");
      out.write("\t\t$('<option disabled selected >대분류</option>').appendTo('#large');\r\n");
      out.write("\t\tfor(var i in list){\r\n");
      out.write("\t\t\t$('<option></option>').val(list[i].num).text(list[i].name).appendTo('#large');\r\n");
      out.write("\t\t};\r\n");
      out.write("\t}\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("function getM(){\r\n");
      out.write("var param = \"parent=\"+$('#large').val();\r\n");
      out.write("//console.log(param);\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: 'get',\r\n");
      out.write("\t\turl: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cate/cate2',\r\n");
      out.write("\t\tdata: param,\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t$('#medium').empty();\r\n");
      out.write("\t\t\t$('#small').empty();\r\n");
      out.write("\t\t\tvar list = JSON.parse(data);\r\n");
      out.write("\t\t\t//console.log(list);\r\n");
      out.write("\t\t\t$('<select id=\"medi\"></select>').attr('onchange','getS()').appendTo('#medium');\r\n");
      out.write("\t\t\t$('<option disabled selected >중분류</option>').appendTo('#medi');\r\n");
      out.write("\t\t\tfor(var i in list){\r\n");
      out.write("\t\t\t\t$('<option></option>').val(list[i].num).text(list[i].name).appendTo('#medi');\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})//ajax end\r\n");
      out.write("}//getM end\r\n");
      out.write("\r\n");
      out.write("function getS(){\r\n");
      out.write("\tvar param = \"parent=\"+$('#medi').val();\r\n");
      out.write("\t//console.log(param);\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: 'get',\r\n");
      out.write("\t\turl: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cate/cate2',\r\n");
      out.write("\t\tdata: param,\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t$('#small').empty();\r\n");
      out.write("\t\t\tvar list = eval(data);\r\n");
      out.write("\t\t\t//console.log(list);\r\n");
      out.write("\t\t\t$('<select id=\"sm\"></select>').appendTo('#small');\r\n");
      out.write("\t\t\t$('<option disabled selected >소분류</option>').appendTo('#sm');\r\n");
      out.write("\t\t\tfor(var i in list){\r\n");
      out.write("\t\t\t\t$('<option></option>').val(list[i].num).text(list[i].name).appendTo('#sm');\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})//ajax end\r\n");
      out.write("}//getS end \r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$('#large').click(function(){\r\n");
      out.write("\t\tgetM();\r\n");
      out.write("\t})\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("function go(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar cate = $('#sm').val();\r\n");
      out.write("\tconsole.log(Number(cate))\r\n");
      out.write("\t$('#cateInput').val(cate);\r\n");
      out.write("\t\r\n");
      out.write("\t$('#go').submit();\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/add\" method=\"post\" id=\"go\" enctype=\"multipart/form-data\">\r\n");
      out.write("\ttitle: <input type=\"text\" name=\"title\"> <br>\r\n");
      out.write("\tseller: <input type=\"text\" name=\"seller\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly> <br>\r\n");
      out.write("\tcategory: \r\n");
      out.write("\t\t<select class=\"cate\" id=\"large\" name=\"type\" ></select>\r\n");
      out.write("\t\t<span  id=\"medium\"></span>\r\n");
      out.write("\t\t<span  id=\"small\"></span> <br>\r\n");
      out.write("\tquantity: <input type=\"text\" name=\"quantity\"> <br>\r\n");
      out.write("\tcontent: <input type=\"text\" name=\"content\"> <br>\r\n");
      out.write("\tprice: <input type=\"text\" name=\"price\"> <br>\r\n");
      out.write("\t\r\n");
      out.write("\timg1: <input type=\"file\" name=\"file1\"> <br>\r\n");
      out.write("\timg2: <input type=\"file\" name=\"file2\"> <br>\r\n");
      out.write("\timg3: <input type=\"file\" name=\"file3\"> <br>\r\n");
      out.write("\timg4: <input type=\"file\" name=\"file4\"> <br>\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"hidden\" name=\"cate\" id=\"cateInput\">\r\n");
      out.write("</form>\r\n");
      out.write("\t<button onclick=\"go()\">등록</button>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
