package com.kitri.test.product;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class ProductController {

	@Resource(name="service")
	private Service service;
	
	@RequestMapping(value="/product/add",  method=RequestMethod.GET)
	public String addG() {
		return "/product/add";
	}
	
	@RequestMapping(value="/product/add",  method=RequestMethod.POST)
	public String addP(Product p) {
		System.out.println(p);
		
		String img_path = "C:\\Users\\hushe\\Desktop\\SPRING\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\webapps\\img\\";

		System.out.println(p.getFile1().getOriginalFilename());
		System.out.println(p.getFile2().getOriginalFilename());
		System.out.println(p.getFile3().getOriginalFilename());
		System.out.println(p.getFile4().getOriginalFilename());
		
		
		
/*		ModelAndView mav = new ModelAndView("report/submissionCommplete");
		File imgDir = new File(img_path);
		String[] imgList = imgDir.list();//업로드 디렉토리의 파일 목록을 뷰 페이지에 반환
		mav.addObject("imgList", imgList);
		return mav;*/
		
		return "redirect:/";
	}
	
/*	public void saveFile(Product p) {
		ArrayList<MultipartFile> list = new ArrayList<MultipartFile>();
		list.add(p.getFile1());
		list.add(p.getFile2());
		list.add(p.getFile3());
		list.add(p.getFile4());
		
		
		String fileName = reportCommand.getReport().getOriginalFilename();
		String path = img_path + fileName;
		File f = new File(path);// 업로드된 파일을 복사할 파일 생성
		// c:/img 폴더에 동일한 이름으로 파일 생성
		try {
			reportCommand.getReport().transferTo(f);
		}catch(IllegalStateException e) {
			e.printStackTrace();
		}catch(IOException e) {
			e.printStackTrace();
		}
		
	}*/
	
	
	
}
